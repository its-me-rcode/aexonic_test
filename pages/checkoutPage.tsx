import type { NextPage } from 'next';
import Head from 'next/head';
import { AiOutlineHeart, AiOutlineSearch } from 'react-icons/ai';
import { BsBag } from 'react-icons/bs';
import { useCartDetailsContext } from '../context/CartDetailsContext';
import Image from 'next/image';
import { useEffect, useState } from 'react';
import { MdDeleteOutline } from 'react-icons/md';

const CheckoutPage: NextPage = () => {
  const { cartData, setCartData } = useCartDetailsContext();

  console.log(cartData);
  const [discount, setDiscount] = useState<any>(0);
  const [total, setTotal] = useState<any>(0);
  const [subTotal, setSubTotal] = useState<any>(0);

  useEffect(() => {
    // {
    //   cartData.length > 0 &&
    //     cartData.reduce(
    //       (accumulator: any, current: any) =>
    //         accumulator + current.price,
    //       0
    //     ) <= 100 && <>No Discount</>;
    // }
    if (cartData.length > 0) {
      setSubTotal(
        cartData.reduce(
          (accumulator: any, current: any) =>
            accumulator + current.price,
          0
        )
      );
      if (
        cartData.reduce(
          (accumulator: any, current: any) =>
            accumulator + current.price,
          0
        ) <= 100
      ) {
        setDiscount(0);
      } else if (
        cartData.reduce(
          (accumulator: any, current: any) =>
            accumulator + current.price,
          0
        ) > 100 &&
        cartData.reduce(
          (accumulator: any, current: any) =>
            accumulator + current.price,
          0
        ) <= 500
      ) {
        setDiscount(
          cartData.reduce(
            (accumulator: any, current: any) =>
              accumulator + current.price,
            0
          ) * 0.1
        );
      } else if (
        cartData.reduce(
          (accumulator: any, current: any) =>
            accumulator + current.price,
          0
        ) > 500
      ) {
        setDiscount(
          cartData.reduce(
            (accumulator: any, current: any) =>
              accumulator + current.price,
            0
          ) * 0.2
        );
      }
      setTotal(
        cartData.reduce(
          (accumulator: any, current: any) =>
            accumulator + current.price,
          0
        ) - discount
      );
    }
  }, [cartData]);

  return (
    <div className="px-28">
      <Head>
        <title>Buy Food | Checkout</title>
        <meta
          name="description"
          content="Generated by create next app"
        />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex items-center py-4 ">
        <h1 className="w-4/12 text-3xl font-bold text-orange-600 ">
          SHO<span className="text-blue-900">PIX</span>
        </h1>
        <div className="flex items-center w-4/12 gap-3 text-xl font-bold text-black ">
          <h3 className="">Women</h3>
          <h3 className="">Men</h3>
          <h3 className="">Kids</h3>
          <h3 className="">Home & Living</h3>
          <h3 className="">Books & More</h3>
        </div>
        <div className="flex items-center justify-end w-4/12 gap-8 text-2xl ">
          <AiOutlineSearch />
          <AiOutlineHeart />
          <BsBag />
        </div>
      </div>
      <div className="flex">
        <div className="w-8/12">
          <div className="flex items-center justify-start gap-3 text-4xl font-bold mt-14">
            <BsBag />
            <h2 className="">Items in your cart</h2>
          </div>
          <div className="w-full mt-10">
            <table className="w-full table-auto">
              <thead>
                <tr className="text-xl font-semibold ">
                  <td className="w-6/12 p-3">Product</td>
                  <td>Quantity</td>
                  <td>Price</td>
                </tr>
              </thead>
              <tbody>
                {cartData.length > 0 &&
                  cartData.map((item: any, index: any) => (
                    <tr key={index}>
                      <td className="flex gap-3 p-3">
                        <Image
                          src="/burger-trail-feat.jpg"
                          width={120}
                          height={120}
                          alt="burger-trail-feat"
                        />
                        <div className="flex flex-col justify-between">
                          <h3 className="text-xl font-semibold">
                            {item.name}
                          </h3>
                          <div
                            className="flex items-center cursor-pointer"
                            onClick={() =>
                              setCartData(
                                cartData.filter(
                                  (itemc: any) => itemc.id !== item.id
                                )
                              )
                            }
                          >
                            <MdDeleteOutline size="24" />
                            <h6 className="text-sm font-semibold text-gray-500">
                              Remove Item
                            </h6>
                          </div>
                        </div>
                      </td>
                      <td className="font-semibold pl-7">
                        {item.qty}
                      </td>
                      <td className="pl-2 font-semibold">
                        {item.price}
                      </td>
                    </tr>
                  ))}
              </tbody>
            </table>
          </div>
        </div>
        <div className="w-4/12 mt-14">
          <div className="w-full px-5 py-3 bg-[#cfe8f3]">
            <h2 className="text-2xl font-bold">Summary</h2>
            <p className="border-b-2 border-gray-300 mt-9"></p>
            <div className="flex flex-col gap-2">
              <div className="flex items-center justify-between mt-5">
                <h2 className="text-sm font-semibold text-gray-500 uppercase">
                  subtotal
                </h2>
                <h2 className="text-sm font-bold text-gray-800 uppercase">
                  &#8377; {subTotal}
                </h2>
              </div>
              <div className="flex items-center justify-between ">
                <h2 className="text-sm font-semibold text-gray-500 uppercase">
                  Estimated Tax
                </h2>
                <h2 className="text-sm font-bold text-gray-800 uppercase">
                  &#8377; ---
                </h2>
              </div>
              <div className="flex items-center justify-between ">
                <h2 className="text-sm font-semibold text-gray-500 uppercase">
                  Shipping Charges
                </h2>
                <h2 className="text-sm font-bold text-gray-800 uppercase">
                  FREE
                </h2>
              </div>
              <div className="flex items-center justify-between ">
                <h2 className="text-sm font-semibold text-gray-500 uppercase">
                  discount
                </h2>
                <h2 className="text-sm font-bold text-gray-800 uppercase">
                  {discount.toFixed(2)}
                </h2>
              </div>
            </div>
            <p className="border-b-2 border-gray-300 mt-9"></p>
            <div className="flex items-center justify-between mt-5 ">
              <h2 className="text-sm font-semibold text-gray-500 uppercase">
                Total
              </h2>
              <h2 className="text-sm font-bold text-gray-800 uppercase">
                {total}
              </h2>
            </div>
          </div>
          <button className="w-full h-10 mt-3 text-xl text-white bg-orange-600 rounded font-bo ld">
            Proceed To Pay
          </button>
        </div>
      </div>
    </div>
  );
};

export default CheckoutPage;
